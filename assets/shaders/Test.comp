#version 450 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct BoundingBox
{
	vec2 min;
	vec2 max;
};

struct PathRender
{
	uint startCmdIndex;
	uint endCmdIndex;
	uint startTileIndex;
	uint endTileIndex;
	mat3 transform;
	uint color[4];
	BoundingBox bbox;
};

struct Command
{
	uint pathIndexCmdType; // 16 bits pathIndex, 8 bits curve type, 8 bits unused, GET_CMD_PATH_INDEX, GET_CMD_TYPE, MAKE_CMD_PATH_INDEX, MAKE_CMD_TYPE
	uint startIndexSimpleCommands;
	uint endIndexSimpleCommands;
	float points[3][2]; // Maybe unused, but maximum 3 points for cubicTo
	float transformedPoints[3][2]; // Maybe unused, but maximum 3 points for cubicTo
};

layout(std430, binding = 0) buffer Pos
{
	Command commands[];
};

void main()
{
	uint index = gl_GlobalInvocationID.x; // Identify the thread, use it to lookup some data.

	//commands[index].points[0] = commands[index].points[0];
	//commands[index].points[1] = commands[index].points[0];
	//commands[index].points[2] = commands[index].points[0];

	commands[index].points[0][0] = 100;
	commands[index].points[1][0] = 100;
	commands[index].points[2][0] = 100;
}
